--- 
- hosts: localhost
  connection: local
  become: true
  become_user: root 
  tasks:

  - name: add hosts to /etc/hosts from /etc/ansible/hosts (localhost)
    lineinfile: name=/etc/hosts
      line="{{hostvars[item].ip}}  {{hostvars[item].name}} {{hostvars[item].fqdn}}" 
      insertafter=EOF #"
    with_items: "{{groups['all_hosts']}}" 
    tags: 
    - setup_etc_hosts_local
    - setup_basics

# tasks for hosts in cluster_hosts group (see ansible/hosts)
# run tasks locally (no ssh)
#
- hosts: localhost
  connection: local  
  serial: 1
  tasks: 

  - name: remove old ssh keys (localhost)
    file: path={{item}}
          state=absent
    with_items: 
    - "~/.ssh/id_rsa"
    - "~/.ssh/id_rsa.pub"
    tags: 
    - setup_ssh_local
    - setup_basics

  - name: Run ssh-keygen (localhost)
    shell: 'ssh-keygen -f ~/.ssh/id_rsa -P ""'
    tags: 
    - setup_ssh_local
    - setup_basics

  - name: distribute authorization keys for root (localhost)
    shell: "ssh-copy-id -i /{{user}}/.ssh/id_rsa {{user}}@{{item}}"
    with_items: groups['cluster_hosts']
    when: user == "root"
    tags: 
    - setup_ssh
    - setup_basics

  - name: distribute authorization keys for non-root users (localhost)
    shell: "ssh-copy-id -i /home/{{user}}/.ssh/id_rsa {{user}}@{{item}}"
    with_items: groups['cluster_hosts']
    when: user != "root"
    tags: 
    - setup_ssh
    - setup_basics

- hosts: localhost
  connection: local
  become: true
  become_user: root 
  tasks:

  - name: create {{download_dir}}
    file: name={{download_dir}}
          state=directory
    tags: setup_download_dir

  - name: setup pip
    yum: name="python-pip"
    tags: 
    - setup_python_pip
    - setup_basics

  - name: setup passlib
    pip: name="passlib"
    tags: 
    - setup_pip_passlib
    - setup_basics

  # section: setup_repos
  #
# - name: install createrepo via yum (localhost)
#   yum: name=createrepo
#   tags: 
#   - setup_repos
#   - setup_basics

# - name: copy files from /vagrant/dse-rpm/ to /opt/dse-repo/ (localhost)
#   copy: src=/vagrant/dse-rpm/
#         dest=/opt/dse-repo/
#   tags: 
#   - setup_repos
#   - setup_basics

  - name: get epel repo
    copy: src=/etc/yum.repos.d/epel.repo
          dest="{{download_dir}}/yum.repos.d/"
    tags: 
    - setup_repos
    - setup_basics

  - name: get datastax repo
    lineinfile: dest={{download_dir}}/yum.repos.d/datastax.repo 
                line="{{item}}"
                create=yes
                insertafter=EOF
    with_items:
    - "[datastax]"
    - "name = DataStax Repo for Apache Cassandra"
    - "baseurl = http://rpm.datastax.com/community"
    - "enabled = 1"
    - "gpgcheck = 0"
    tags: 
    - setup_repos
    - setup_basics

# - name: create repo in /opt/dse-repo/ (localhost)
#   command: createrepo /opt/dse-repo/
#   tags: 
#   - setup_repos
#   - setup_basics

  - name: create (wget) cloudera-cdh4 repo
    command: wget {{cdh4_repo_rpm}}
             chdir={{download_dir}}/yum.repos.d/
    tags: 
    - setup_repos
    - setup_basics

  - name: get datastax repo
    lineinfile: dest={{download_dir}}/yum.repos.d/google-chrome.repo 
                line="{{item}}"
                create=yes
                insertafter=EOF
    with_items:
    - "[google-chrome]"
    - "name=google-chrome"
    - "baseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch"
    - "enabled=1"
    - "gpgcheck=1"
    - "gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub"
    tags: 
    - setup_repos
    - setup_chrome
    - setup_basics


  - name: copy {{download_dir}}/yum.repos.d/* to /etc/yum.repos.d/
    copy: src={{download_dir}}/yum.repos.d/
          dest=/etc/yum.repos.d/
    tags: 
    - setup_repos
    - setup_basics

  - name: get rstudio server rpm file
    command: > 
      wget {{rstudio_server_url}} 
        --no-check-certificate 
        --output-document={{rstudio_server_rpm}}
      chdir={{download_dir}}
    tags: 
    tags: 
    - get_rstudio
    - setup_basics

  - name: get spark archive
    get_url: url={{spark_url}}
             dest={{spark_archive}}
             validate_certs=no
    tags: 
    - get_spark
    - setup_basics

  - name: get java 1.8 archive
    command: "wget --no-cookies --no-check-certificate -O {{java18_file}} --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u51-b16/jdk-8u51-linux-x64.tar.gz\""
    tags: 
    - get_spark
    - setup_basics

  # section: setup_chrome
  #
# - name: install google-chrome-stable (localhost)
#   yum: name=google-chrome-stable
#        enablerepo=google-chrome
#   tags: 
#   - setup_chrome
#   - setup_basics

  - name: install libexif (localhost)
    yum: name=libexif
    tags: 
    - setup_chrome
    - setup_basics

  - name: Done
    command: echo "Done"
    tags: all
